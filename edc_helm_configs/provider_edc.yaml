#
#  Copyright (c) 2023 Think.it GmbH
#  Copyright (c) 2023 ZF Friedrichshafen AG
#  Copyright (c) 2023 Mercedes-Benz Tech Innovation GmbH
#  Copyright (c) 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#  Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#


---
# Default values for eclipse-dataspace-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

install:
  daps: false
  postgresql: true
  vault: true
fullnameOverride: ""
nameOverride: ""

participant:
  id: "{CLIENT_ID generated by DAPS}"

# -- Identity Service: Dynamic Attributes Provisioning Service
daps:
  fullnameOverride: "daps"
  url: "{DAPS URL}"
  clientId: "{CLIENT_ID generated by DAPS}"
  paths:
    jwks: /.well-known/jwks.json
    token: /auth/token

controlplane:
  endpoints:
    # -- data management api, used by internal users, can be added to an ingress and must not be internet facing
    management:
      port: 8081
      path: /management
      # -- authentication key, must be attached to each 'X-Api-Key' request header
      authKey: "root"

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      add: []
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 10001

  ## Ingress declaration to expose the network service.
  ingresses:
    ## Public / Internet facing Ingress
    - enabled: false
      hostname: "edc-control.{PROVIDER_NAMESPACE}"
      # -- EDC endpoints exposed by this ingress resource
      endpoints:
        - protocol
    ## Private / Intranet facing Ingress
    - enabled: false
      hostname: "edc-control.intranet"
      # -- EDC endpoints exposed by this ingress resource
      endpoints:
        - management
        - control
  url:
    protocol: "http://provider-tractusx-connector-controlplane.provider:8084"

dataplane:
  ## Ingress declaration to expose the network service.
  ingresses:
    ## Public / Internet facing Ingress
    - enabled: false
      hostname: "edc-data.provider"
      endpoints:
        - public
  url:
    public: "http://provider-tractusx-connector-dataplane.provider:8081/api/public"

# -- Assets Database: PostreSQL
postgresql:
  username: "user"
  password: "password"
  jdbcUrl: "jdbc:postgresql://postgresql:5432/edc"
  fullnameOverride: "postgresql"
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false
  auth:
    database: "edc"
    username: "user"
    password: "password"

# -- Sercrets Manager: Hashicorp Vault
vault:
  fullnameOverride: "vault-provider"
  injector:
    enabled: false
  server:
    dev:
      enabled: true
      devRootToken: "{VAULT_TOKEN}"
  hashicorp:
    url: "http://vault-provider:8200"
    token: "{VAULT_TOKEN}"
    timeout: 30
    healthCheck:
      enabled: true
      standbyOk: true
    paths:
      secret: /v1/secret
      health: /v1/sys/health
  secretNames:
    transferProxyTokenSignerPrivateKey: transfer-proxy-token-signer-private-key
    transferProxyTokenSignerPublicKey: transfer-proxy-token-signer-public-key
    transferProxyTokenEncryptionAesKey: transfer-proxy-token-encryption-aes-key
    dapsPrivateKey: daps-private-key
    dapsPublicKey: daps-public-key
backendService:
  httpProxyTokenReceiverUrl: "yourbackendurl"
